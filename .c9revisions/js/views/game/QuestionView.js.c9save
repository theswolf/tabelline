{"ts":1363090956530,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"define([\r\n  'jquery',\r\n  'underscore',\r\n  'backbone',\r\n  // Pull in the Collection module from above\r\n  'collections/game/QuestionCollection'\r\n], function($, _, Backbone, QuestionCollection){\r\n  var QuestionView = Backbone.View.extend({\r\n    initialize: function(){\r\n      this.collection = new QuestionCollection();\r\n      // Compile the template using Underscores micro-templating\r\n      //var compiledTemplate = _.template( projectsListTemplate, { projects: this.collection.models } );\r\n      //this.$el.html(compiledTemplate);\r\n      this.render();\r\n    },\r\n    \r\n    numQuestion: '',\r\n    \r\n    render: function() {\r\n    \tvar compiledTemplate = _.template($(\"#question_template\").html(), {domanda: \"3 minuti - 40 domande\"});\r\n    \tthis.$el.html(compiledTemplate);\r\n    \tthis.$el.trigger('create');\r\n    \tthis.numQuestion = Approuter.numQuestion;\r\n    },\r\n    \r\n    reset: function() {\r\n    \tApprouter.question.collection = new QuestionCollection();\r\n    },\r\n    \r\n    nextquestion: function() {\r\n    \t//var self = Approuter.question;\r\n    \tif(Approuter.question.collection.length < Approuter.numQuestion) {\r\n    \t\tvar question = Approuter.question.collection.nextval();\r\n        \tvar questiontext = question.toJSON().moltiplicando * question.toJSON().moltiplicatore;\r\n        \tApprouter.lastQuestion = questiontext;\r\n        \tApprouter.history.push(questiontext);\r\n        \t\r\n        \t\r\n    \t}\r\n    \telse {\r\n    \t\tquestiontext = 'finished';\r\n    \t}\r\n    \tApprouter.count++;\r\n    \tvar compiledTemplate = _.template($(\"#question_template\").html(), {domanda: questiontext});\r\n    \tApprouter.question.$el.html(compiledTemplate);\r\n    \tApprouter.question.$el.trigger('create');\r\n    },\r\n    \r\n    setresponse: function() {\r\n    \tvar collection = Approuter.question.collection;\r\n    \tvar model = collection.at(collection.length-1);\r\n    \tmodel.set({ risposta: Approuter.lastResponse});\r\n    }\r\n    \r\n  });\r\n  // Returning instantiated views can be quite useful for having \"state\"\r\n  return QuestionView;\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":2009}]],"length":2009}
{"contributors":[],"silentsave":false,"ts":1363091114117,"patch":[[{"diffs":[[0,"da: "],[-1,"\"3 minuti - 40 domande\""],[1,"Label.time"],[0,"});\r"]],"start1":699,"start2":699,"length1":31,"length2":18}]],"length":1996,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363092122407,"patch":[[{"diffs":[[0,"t = "],[-1,"'"],[1,"Label."],[0,"finished"],[-1,"'"],[0,";\r\n "]],"start1":1417,"start2":1417,"length1":18,"length2":22}]],"length":2000,"saved":false}
